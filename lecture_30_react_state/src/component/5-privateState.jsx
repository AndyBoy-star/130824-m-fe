/**
Состояние изолировано и приватно
Состояние локально для экземпляра компонента на экране. 
Другими словами, если вы отрендерите один и тот же компонент дважды, 
каждая копия будет иметь полностью изолированное состояние! 
Изменение одного из них не повлияет на другой.

В этом примере компонент Gallery из предыдущего примера рендерится дважды без изменений в его логике. 
Попробуйте нажать на кнопки внутри каждой из галерей. 
Обратите внимание, что их состояния независимы.
 */

import Gallery from './4-multiState.jsx';

export default function PrivateState() {
    return (
        <div className="Page">
            <Gallery />
            <Gallery />
        </div>
    );
}

/**
Это то, что отличает состояние от обычных переменных, которые вы можете объявить в начале вашего модуля. 
Состояние не привязано к конкретному вызову функции или месту в коде, но оно «локально» для конкретного места на экране. 
Вы отрендерили два компонента `<Gallery />`, поэтому их состояния хранятся отдельно.

Также обратите внимание, что компонент `PrivateState` не «знает» ничего о состоянии компонента `Gallery`.
И даже не знает о том, есть ли у него вообще какое-то состояние. 
В отличие от пропсов, состояние полностью приватно для компонента, который его объявляет. 
Родительский компонент не может его изменить. 
Это позволяет добавлять состояние к любому компоненту или удалять его без влияния на остальные компоненты.
 */
