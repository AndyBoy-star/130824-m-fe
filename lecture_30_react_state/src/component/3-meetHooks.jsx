/**
 * ЗНАКОМСТВО С ВАШИМ ПЕРВЫМ ХУКОМ
 * В Реакте useState, как и любая другая функция, начинающаяся с “use”, называется Хук.
 * Хуки — это специальные функции, которые доступны только во время реакт-рендеринга.
 * Хуки позволяют нам «подключаться» к различным возможностям Реакта, к его "фичам".
 * Состояние (State) — это всего лишь одна из этих фич.
 * Также есть и другие хуки.
 */

/**
 * ПОДВОДНЫЕ КАМНИ
 * Хуки могут вызываться только на верхнем уровне компонентов или других хуков. 
 * Нельзя вызывать хуки внутри условных переходов if, циклов или других вложенных функций. 
 * Хуки — это функции, но полезно думать о них как о безусловных декларациях о потребностях компонента. 
 * Например, мы «импортируем» модули в верхней части файла.
 * Точно так же мы «используем» возможности Реакта в верхней части компонента.
 */

/**
АНАТОМИЯ USESTATE
Когда вызываем useState, мы говорите Реакту, что хотим, чтобы данный компонент что-то запомнил:
  - В нашем случае хотим, чтобы React запомнил index.
    const [index, setIndex] = useState(0);

По соглашению, эту пару называют как `const [something, setSomething]`. 
Вы можете назвать их как угодно, но соглашения упрощают понимание кода в разных проектах.

Единственным аргументом для useState является начальное значение переменной состояния. 
В нашем примере начальное значение index установлено как 0 с помощью useState(0).

Каждый раз, когда компонент рендерится, useState возвращает массив, содержащий два значения:
1. Переменная состояния (`index`) с сохраненным значением.
2. Функция установки состояния (`setIndex`), 
   которая может обновить переменную состояния 
   и заставить React снова отрендерить компонент.

Вот как это работает на практике:
const [index, setIndex] = useState(0);
1. Компонент рендерится в первый раз. 
   Поскольку для useState мы передали 0 как начальное значение index, он вернет [0, setIndex]. 
   React запоминает, что 0 — это последнее значение стейт-переменной index.
2. Мы обновляем переменную index.
   Когда пользователь нажимает на кнопку, вызывается setIndex(index + 1). 
   index равен 0, поэтому это будет setIndex(0 + 1), т.е. setIndex(1).
   Это говорит Реакту, что стейт-переменная index изменилась.
   Реакт на это среагирует и перерендерит компонент Gallery.
3. Происходит второй рендер компонента Gallery.
   React снова видит useState(0).
   Но React помнит, что мы установили index в 1.
   Поэтому он возвращает [1, setIndex].
4. И так далее!

 */