/**
 * КОГДА ОБЫЧНОЙ ПЕРЕМЕННОЙ НЕДОСТАТОЧНО
 * Ниже компонент, который выводит на экран изображение.
 * При нажатии на кнопку "Дальше" должна отображаться следующая картинка.
 * Для этого мы увеличиваем индекс на 1, затем на 2, на 3, и т.д.
 * Однако, это не работает (попробуйте).
 * Индекс увеличивается, но картинка не менятеся.
 */
export default function Gallery({ gallery }) {
    let index = 0;

    /**
    * Функция handleClick обновляет локальную переменную index.
    * Но компонент Gallery не видит index по двум причинам:
    * 1. Локальные переменные не сохраняются между рендерами (перерисовками).
    *    Потому что когда Реакт рендерит Gallery повторно, он делает это "с нуля".
    *    Он не учитывает никакие изменения локальных переменных.
    * 2. Изменения в локальных переменных не вызывают перерисовку.
    *    Реакт не понимает, что ему надо перерендерить Gallery с новыми данными.
    */
    function handleClick() {
        index = index + 1
        console.log('index:', index);
    }

    let itemObj = gallery[index]
    return (
        <>
            <button onClick={handleClick}>Дальше</button>

            <h1>{itemObj.name}</h1>
            <h3>{itemObj.artist}</h3>
            <img src={itemObj.url} alt="" width="200" />
        </>
    )
}

/**
 * ЧТО В ИТОГЕ?
 * Чтобы обновить компонент с новыми данными, должно произойти две вещи:
 * 1. Сохранение данных между рендерами.
 * 2. Дать Реакту понять, что надо отрендерить компонент с новыми данными.
 * 
 * useState как раз и обеспечивает нас этими двумя вещами:
 * 1. Переменная состояния (state variable)
 *    для сохранения данных между рендерами.
 * 2. Функция для изменения этой переменной.
 * 
 * Теперь React увидит, что переменная изменилась и перерендерит компонент.
 */
